Problem : Given an array arr of size nâˆ’1 that contains distinct integers in the range of 1 to n (inclusive), find the missing element. The array is a permutation of size n 
          with one element missing. Return the missing element.
          
          Examples:
          Input: n = 5, arr[] = [1,2,3,5]
          Output: 4
          Explanation : All the numbers from 1 to 5 are present except 4.
          
          Input: n = 2, arr[] = [1]
          Output: 2
          Explanation : All the numbers from 1 to 2 are present except 2.

Solution : 

int missingNumber(int n, vector<int>& arr) {
        // method - 1  T.C = O(n)  S.C = O(n)
        // vector<int> ans(n+1,0);
        // for(int i=0;i<arr.size();i++){
        //     ans[arr[i]]++;
        // }
        // for(int i=1;i<=n;i++){
        //     if(ans[i]==0)
        //         return i;
        // }
        // return -1;
        
        // method - 2  T.C = O(n)  S.C =  O(1)
        int sum=0;
        for(int i=0;i<arr.size();i++)
            sum+=arr[i];
        int expectedSum=(n*(n+1))/2;
        return expectedSum-sum;
    }

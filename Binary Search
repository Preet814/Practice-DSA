Problem : Given a sorted array arr and an integer k, find the position(0-based indexing) at which k is present in the array using binary search.
          
          Examples:
          Input: k = 4, arr= [1, 2, 3, 4, 5]  
          Output: 3
          Explanation: 4 appears at index 3.
          
          Input: k = 445, arr= [11, 22, 33, 44, 55] 
          Output: -1
          Explanation: 445 is not present.

Solution : 

int binarysearch(vector<int> &arr, int k) {
        int s=0,e=arr.size()-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]==k)
                return mid;
            else if(arr[mid]<k)
                s=mid+1;
            else
                e=mid-1;
        }
        return -1;
    }

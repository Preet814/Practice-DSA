Problem : Given a decimal number m. Convert it into a binary string and apply n iterations.
          In each iteration, replace the character 0 with the string 01, and 1 with 10. Find the kth (1-based indexing) character in the string after the nth iteration.
          
          Example 1:
          Input: m = 5, n = 2, k = 5
          output: 0
          Explanation: Binary representation of m 
          is "101", after one iteration binary 
          representation will be "100110", and after 
          second iteration binary representation 
          will be "100101101001". 

Solution :

char kthCharacter(int m, int n, int k)
	{
	    string str="";
	    if(m==0)
	        str+="0";
	    while(m!=0){
	        str+=to_string(m%2);
	        m/=2;
	    }
	    reverse(str.begin(),str.end());
	    while(n--){
	        string ans="";
	        for(int i=0;i<str.length();i++){
	            if(str[i]=='1'){
	                ans+="10"; 
	                
	            }
	            else{
	                ans+="01";
	                
	            }
	        }
	        str=ans;
	    }
	   // cout<<str<<endl;
	    return str[k-1];
	}
